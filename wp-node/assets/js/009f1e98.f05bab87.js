"use strict";(self.webpackChunkwp_node=self.webpackChunkwp_node||[]).push([[715],{3511:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/configuration","title":"Configuration","description":"WP-Node provides a flexible configuration system to support both single-site and multi-site WordPress environments. It also allows customization of Taxonomy, Post Type, and Post Status via CLI.","source":"@site/docs/getting-started/configuration.md","sourceDirName":"getting-started","slug":"/getting-started/configuration","permalink":"/wp-node/docs/getting-started/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation Guide","permalink":"/wp-node/docs/getting-started/installation"},"next":{"title":"Dependency Injection","permalink":"/wp-node/docs/concepts-features/di"}}');var o=t(4848),s=t(8453);const a={},r="Configuration",c={},l=[{value:"Global Configuration",id:"global-configuration",level:2},{value:"\ud83e\udde9 Single-Site Configuration",id:"-single-site-configuration",level:3},{value:"\ud83e\udde9 Multi-Site Configuration",id:"-multi-site-configuration",level:3},{value:"Taxonomy Configuration",id:"taxonomy-configuration",level:2},{value:"\ud83d\udee0\ufe0f Create a Custom Taxonomy (with Hierarchy Enabled)",id:"\ufe0f-create-a-custom-taxonomy-with-hierarchy-enabled",level:4},{value:"\u2705 CLI Output Example",id:"-cli-output-example",level:4},{value:"\ud83d\udce5 Using Custom Taxonomy in Code",id:"-using-custom-taxonomy-in-code",level:4},{value:"\u270f\ufe0f Updating the Taxonomy Configuration",id:"\ufe0f-updating-the-taxonomy-configuration",level:4},{value:"Post Type Configuration",id:"post-type-configuration",level:2},{value:"Post Status Configuration",id:"post-status-configuration",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,o.jsxs)(n.p,{children:["WP-Node provides a flexible configuration system to support both ",(0,o.jsx)(n.strong,{children:"single-site"})," and ",(0,o.jsx)(n.strong,{children:"multi-site"})," WordPress environments. It also allows customization of ",(0,o.jsx)(n.strong,{children:"Taxonomy"}),", ",(0,o.jsx)(n.strong,{children:"Post Type"}),", and ",(0,o.jsx)(n.strong,{children:"Post Status"})," via CLI."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"global-configuration",children:"Global Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["At a minimum, WP-Node requires a ",(0,o.jsx)(n.code,{children:"staticAssetsPath"})," configuration. If using WordPress in ",(0,o.jsx)(n.strong,{children:"multi-site mode"}),", additional fields are needed."]}),"\n",(0,o.jsx)(n.h3,{id:"-single-site-configuration",children:"\ud83e\udde9 Single-Site Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "staticAssetsPath": "public"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"-multi-site-configuration",children:"\ud83e\udde9 Multi-Site Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "staticAssetsPath": "public",\n  "multisite": {\n    "enabled": true,\n    "defaultBlogId": 1,\n    "defaultSiteId": 1\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Once initialized, WP-Node will enrich this configuration internally. You can inspect the full config via:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const context = await Application.getContext();\nconsole.log(context.config.config);\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,o.jsx)(n.strong,{children:"Note:"})," WP-Node Core ",(0,o.jsx)(n.strong,{children:"does not interact with or modify media files"})," such as images or uploads on the file system. Its focus is on interacting with the ",(0,o.jsx)(n.strong,{children:"WordPress database"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"staticAssetsPath"})," setting is still required because WordPress stores metadata (e.g., ",(0,o.jsx)(n.code,{children:"_wp_attached_file"})," in ",(0,o.jsx)(n.code,{children:"postmeta"}),") that references file paths. WP-Node uses this metadata to work with attachments, but it does ",(0,o.jsx)(n.strong,{children:"not"})," read, write, or serve the actual media files."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"taxonomy-configuration",children:"Taxonomy Configuration"}),"\n",(0,o.jsx)(n.p,{children:"WP-Node CLI can generate configuration files for custom taxonomies. These configurations support features such as hierarchy, and capability settings."}),"\n",(0,o.jsx)(n.h4,{id:"\ufe0f-create-a-custom-taxonomy-with-hierarchy-enabled",children:"\ud83d\udee0\ufe0f Create a Custom Taxonomy (with Hierarchy Enabled)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npx @rnaga/wp-node-cli -- config taxonomy -h yes\n"})}),"\n",(0,o.jsx)(n.h4,{id:"-cli-output-example",children:"\u2705 CLI Output Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"\u2714 Enter new taxonomy name (ASCII and underscore only): \xb7 custom_category\n_wp/config/taxonomy.json created successfully.\n_wp/config/taxonomy.d.ts created successfully.\n"})}),"\n",(0,o.jsx)(n.h4,{id:"-using-custom-taxonomy-in-code",children:"\ud83d\udce5 Using Custom Taxonomy in Code"}),"\n",(0,o.jsx)(n.p,{children:"You can retrieve terms from the newly defined taxonomy via:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'const post = await context.utils.post.get(1);\nconst terms = post.terms("custom_category");\n'})}),"\n",(0,o.jsx)(n.h4,{id:"\ufe0f-updating-the-taxonomy-configuration",children:"\u270f\ufe0f Updating the Taxonomy Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.code,{children:"_wp/config/taxonomy.json"})," to customize its behavior, e.g., toggle hierarchical, disable showUi, or set custom capabilities:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "custom_category": {\n    "hierarchical": false,\n    "showUi": false,\n    "capabilities": {\n      "manage_terms": "manage_terms",\n      "assign_terms": "assign_terms",\n      "edit_terms": "edit_terms",\n      "delete_terms": "delete_terms"\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"post-type-configuration",children:"Post Type Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["To define a custom post type, use the CLI with the ",(0,o.jsx)(n.code,{children:"-n"})," flag:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npx @rnaga/wp-node-cli -- config postType -n custom_post\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This generates both the JSON and TypeScript type definition in ",(0,o.jsx)(n.code,{children:"_wp/config"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"post-status-configuration",children:"Post Status Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Similarly, you can define a custom post status:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npx @rnaga/wp-node-cli -- config postStatus -n custom_type\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);