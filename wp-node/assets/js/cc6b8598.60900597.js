"use strict";(self.webpackChunkwp_node=self.webpackChunkwp_node||[]).push([[51],{5406:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"concepts-features/hooks","title":"Hooks (Filter and Action)","description":"WP-Node supports a hook system inspired by WordPress, including both filters and actions.","source":"@site/docs/concepts-features/hooks.md","sourceDirName":"concepts-features","slug":"/concepts-features/hooks","permalink":"/wp-node/docs/concepts-features/hooks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd17 Relationship Between Components","permalink":"/wp-node/docs/concepts-features/diagram"},"next":{"title":"User, Role and Capabilities","permalink":"/wp-node/docs/concepts-features/user-role-capabilities"}}');var s=t(4848),r=t(8453);const i={},a="Hooks (Filter and Action)",c={},d=[{value:"Filter",id:"filter",level:2},{value:"Action",id:"action",level:2},{value:"How Hooks Work",id:"how-hooks-work",level:2},{value:"1. Decorators",id:"1-decorators",level:3},{value:"2. HookCommand",id:"2-hookcommand",level:3},{value:"Using Decorators",id:"using-decorators",level:2},{value:"Step 1: Declare Interfaces",id:"step-1-declare-interfaces",level:3},{value:"Step 2: Create a Hook Class",id:"step-2-create-a-hook-class",level:3},{value:"Step 3: Register Hooks",id:"step-3-register-hooks",level:3},{value:"Using HookCommand",id:"using-hookcommand",level:2},{value:"Step 1: Create Hook Commands",id:"step-1-create-hook-commands",level:3},{value:"Step 2: Register Hook Commands via Context",id:"step-2-register-hook-commands-via-context",level:3},{value:"Summary",id:"summary",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"hooks-filter-and-action",children:"Hooks (Filter and Action)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"WP-Node"})," supports a hook system inspired by WordPress, including both ",(0,s.jsx)(n.strong,{children:"filters"})," and ",(0,s.jsx)(n.strong,{children:"actions"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Notes: Since WP-Node is written in ",(0,s.jsx)(n.strong,{children:"TypeScript"}),", these hooks are ",(0,s.jsx)(n.strong,{children:"not directly compatible"})," with WordPress core."]}),"\n",(0,s.jsx)(n.h2,{id:"filter",children:"Filter"}),"\n",(0,s.jsxs)(n.p,{children:["In WordPress, a ",(0,s.jsx)(n.strong,{children:"filter"})," allows you to modify data at specific points during execution by adding custom callback functions that receive and return the filtered value. You can register a callback using ",(0,s.jsx)(n.code,{children:"add_filter()"}),", specify the ",(0,s.jsx)(n.strong,{children:"hook name"}),", ",(0,s.jsx)(n.strong,{children:"callback"}),", and optionally, a ",(0,s.jsx)(n.strong,{children:"priority"})," (lower runs first) and number of ",(0,s.jsx)(n.strong,{children:"accepted arguments"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In WP-Node, filters serve the same purpose \u2014 transforming data \u2014 but are fully ",(0,s.jsx)(n.strong,{children:"type-safe"})," and suports ",(0,s.jsx)(n.strong,{children:"asynchronous"})," - allowing you to perform async operations (e.g., fetch or validate) during transformation."]}),"\n",(0,s.jsx)(n.h2,{id:"action",children:"Action"}),"\n",(0,s.jsxs)(n.p,{children:["In WordPress, an ",(0,s.jsx)(n.strong,{children:"action"})," allows you to execute logic at specific points without returning a value. You register actions with ",(0,s.jsx)(n.code,{children:"add_action()"}),", and they\u2019re typically used for side effects (e.g., logging, sending email, updating state)."]}),"\n",(0,s.jsxs)(n.p,{children:["In WP-Node, actions extend Node.js's ",(0,s.jsx)(n.code,{children:"EventEmitter"})," - You can also register actions to trigger ",(0,s.jsx)(n.strong,{children:"only once"})," using ",(0,s.jsx)(n.code,{children:"addOnce()"})," or ",(0,s.jsx)(n.code,{children:"addCommandOnce()"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"how-hooks-work",children:"How Hooks Work"}),"\n",(0,s.jsx)(n.p,{children:"WP-Node supports two ways to define and register hooks:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Using TypeScript decorators"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Using HookCommand utilities"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"1-decorators",children:"1. Decorators"}),"\n",(0,s.jsxs)(n.p,{children:["Decorators are tightly integrated with the WP-Node ",(0,s.jsx)(n.code,{children:"Application"})," lifecycle. When you register hook classes with decorators, WP-Node can attach hooks to ",(0,s.jsx)(n.code,{children:"Context"})," when it's instantiated \u2014 allowing hooks like ",(0,s.jsx)(n.code,{children:"core_init"})," to fire immediately after context creation."]}),"\n",(0,s.jsx)(n.h3,{id:"2-hookcommand",children:"2. HookCommand"}),"\n",(0,s.jsxs)(n.p,{children:["HookCommand is a more straightforward, code-based approach. You define commands with type parameters, then register them at runtime through the ",(0,s.jsx)(n.code,{children:"context"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feature"}),(0,s.jsx)(n.th,{children:"Decorator"}),(0,s.jsx)(n.th,{children:"HookCommand"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Setup"}),(0,s.jsx)(n.td,{children:"Requires TypeScript interfaces"}),(0,s.jsx)(n.td,{children:"Just define and register via context"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Lifecycle"}),(0,s.jsx)(n.td,{children:"Pre-instantiated (via Application)"}),(0,s.jsx)(n.td,{children:"Runtime-only"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Flexibility"}),(0,s.jsx)(n.td,{children:"Tied to class structure"}),(0,s.jsx)(n.td,{children:"Functional, lightweight"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Use Case"}),(0,s.jsx)(n.td,{children:"System hooks"}),(0,s.jsx)(n.td,{children:"Dynamic, ad-hoc hooks"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"using-decorators",children:"Using Decorators"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-declare-interfaces",children:"Step 1: Declare Interfaces"}),"\n",(0,s.jsx)(n.p,{children:"You must declare TypeScript interfaces to define the hook names, argument types, and return types."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'// Action Hook Interface\ndeclare module "@rnaga/wp-node/types/hooks/actions.d" {\n  export interface Actions {\n    custom_action: (n: number) => void;\n  }\n}\n\n// Filter Hook Interface\ndeclare module "@rnaga/wp-node/types/hooks/filters.d" {\n  export interface Filters {\n    custom_filter: (n: number) => number;\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-create-a-hook-class",children:"Step 2: Create a Hook Class"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"@hook"}),", ",(0,s.jsx)(n.code,{children:"@action"}),", and ",(0,s.jsx)(n.code,{children:"@filter"})," decorators to bind methods to hook names."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'@hook("custom_hook") // Optional namespace\nexport class CustomFilter {\n  public v = 0;\n\n  // This will be called when \'custom_action\' is triggered\n  @action("custom_action")\n  testAction() {\n    this.v += 123;\n  }\n\n  // This will modify the input number by adding 10\n  // Priority 99 means it runs after lower-priority filters\n  @filter("custom_filter", 99)\n  testFilter(data: number) {\n    return data + 10;\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-register-hooks",children:"Step 3: Register Hooks"}),"\n",(0,s.jsx)(n.p,{children:"Register your hook classes with Application before context is created."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Application.registerHooks([CustomFilter]);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Fire hooks"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const context = await Application.getContext();\n\n// Fire action\ncontext.hooks.action.do("custom_action", context);\n\n// Apply the filter - the result should be 20\nconst result = await context.hooks.filter.apply("custom_filter", 10);\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"using-hookcommand",children:"Using HookCommand"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-create-hook-commands",children:"Step 1: Create Hook Commands"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"HooksCommand"})," utility to create typed filter or action commands."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { HooksCommand } from "@rnaga/wp-node/core/hooks/hooks-command";\n\n// Filter that transforms a number\nconst filterCommand = HooksCommand.createFilter<number, number>();\n\n// Action that receives a number but returns nothing\nconst actionCommand = HooksCommand.createAction<number>();\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-register-hook-commands-via-context",children:"Step 2: Register Hook Commands via Context"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const context = await Application.getContext("single");\n\n// Register a filter command that adds 100 to input\ncontext.hooks.filter.addCommand(filterCommand, (n) => {\n  return n + 100;\n});\n\n// Apply the filter command (result should be 110)\nconst result = await context.hooks.filter.applyCommand(filterCommand, 10);\n\n// Register an action command that updates a value\nlet total = 0;\ncontext.hooks.action.addCommand(actionCommand, (m) => {\n  total += m;\n});\n\n// Trigger the action (total becomes 5)\nawait context.hooks.action.doCommand(actionCommand, 5);\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use decorators"})," if you want to register hooks statically as part of the Application lifecycle."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use HookCommand"})," for dynamic or one-off hook logic."]}),"\n",(0,s.jsxs)(n.li,{children:["Both methods offer ",(0,s.jsx)(n.strong,{children:"type-safe"})," and ",(0,s.jsx)(n.strong,{children:"async"})," behavior \u2014 improving on traditional WordPress hooks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Filters"})," transform and return data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Actions"})," perform side effects and return nothing."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);