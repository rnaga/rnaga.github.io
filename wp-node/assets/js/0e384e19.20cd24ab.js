"use strict";(self.webpackChunkwp_node=self.webpackChunkwp_node||[]).push([[976],{2053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"intro","title":"Introduction","description":"Welcome to WP-Node - a modern TypeScript WordPress-compatible Node.js project.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/wp-node/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Installation Guide","permalink":"/wp-node/docs/getting-started/installation"}}');var t=s(4848),r=s(8453);const o={sidebar_position:1},a="Introduction",d={},l=[{value:"What is WP-Node?",id:"what-is-wp-node",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Key Technologies",id:"key-technologies",level:2},{value:"Knex.js for Database Operations",id:"knexjs-for-database-operations",level:3},{value:"Zod for Data Validation",id:"zod-for-data-validation",level:3},{value:"Minimal Dependencies Philosophy",id:"minimal-dependencies-philosophy",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Getting Started",id:"getting-started",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsxs)(n.p,{children:["Welcome to ",(0,t.jsx)(n.strong,{children:"WP-Node"})," - a modern TypeScript WordPress-compatible Node.js project."]}),"\n",(0,t.jsx)(n.h2,{id:"what-is-wp-node",children:"What is WP-Node?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"WP-Node"})," is a Node.js project written entirely in TypeScript that's compatible with WordPress. It provides a modern, type-safe way to interact with WordPress database tables and perform operations that WordPress core typically handles, but with the power and flexibility of Node.js and TypeScript."]}),"\n",(0,t.jsx)(n.h3,{id:"what-youll-need",children:"What you'll need"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js"})," version 22.0 or above:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When installing Node.js, you are recommended to check all checkboxes related to dependencies."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-technologies",children:"Key Technologies"}),"\n",(0,t.jsxs)(n.h3,{id:"knexjs-for-database-operations",children:[(0,t.jsx)(n.a,{href:"https://knexjs.org/",children:"Knex.js"})," for Database Operations"]}),"\n",(0,t.jsxs)(n.p,{children:["To keep things simple and avoid the complexity of raw MySQL queries, WP-Node uses ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://knexjs.org/",children:"Knex.js"})})," as its query builder. Knex provides several important benefits:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SQL Injection Protection"}),": Knex automatically escapes and sanitizes query parameters, protecting against SQL injection attacks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clean Query Building"}),": Construct complex queries using a fluent, chainable API that's more readable than raw SQL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transaction Support"}),": Built-in support for database transactions to ensure data consistency"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"zod-for-data-validation",children:[(0,t.jsx)(n.a,{href:"https://zod.dev/",children:"Zod"})," for Data Validation"]}),"\n",(0,t.jsxs)(n.p,{children:["The project uses ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://zod.dev/",children:"Zod"})})," as its data validation library, offering several advantages:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TypeScript-First"}),": Zod schemas automatically generate TypeScript types, ensuring your data validation and type definitions stay in sync"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Runtime Safety"}),": Validates data at runtime, catching invalid data before it reaches your business logic"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Composable Schemas"}),": Build complex validation schemas by combining simpler ones"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Detailed Error Messages"}),": Provides clear, actionable error messages when validation fails"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Zero Dependencies"}),": Lightweight library with no external dependencies"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"minimal-dependencies-philosophy",children:"Minimal Dependencies Philosophy"}),"\n",(0,t.jsx)(n.p,{children:"Other than Knex and Zod, WP-Node (core) intentionally keeps npm dependencies to a minimum. This approach:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reduces Security Risk"}),": Fewer dependencies mean fewer potential security vulnerabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimizes Bugs"}),": Less external code reduces the chance of encountering third-party bugs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Simplifies Maintenance"}),": Easier to keep dependencies up-to-date with fewer packages to manage"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"WP-Node Core"})," is designed specifically to interact with the WordPress database. It does not support traditional WordPress features such as:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Themes and appearance settings, including updating styling"}),"\n",(0,t.jsx)(n.li,{children:"WordPress Template rendering or theming APIs"}),"\n",(0,t.jsx)(n.li,{children:"WordPress plugins"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Its scope is intentionally limited to providing a type-safe, programmatic interface to WordPress data \u2014 not replicating the full behavior of the WordPress runtime."}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(n.p,{children:"WP-Node is ideal for scenarios where you need direct access to WordPress database without relying on the full WordPress stack. Example use cases include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Running background jobs or cron tasks"})," that update WordPress records \u2014 without needing a full WordPress installation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Building a lightweight REST API"})," using Node.js and TypeScript that interacts with WordPress data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Debugging or inspecting database records"})," from a modern TypeScript environment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Creating a web app"})," (e.g., using Next.js) that needs to pull or push data from a WordPress database, without relying on PHP codebase"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"Examples"}),": For practical implementations of these use cases, explore the ",(0,t.jsx)(n.a,{href:"https://github.com/rnaga/wp-node/tree/main/examples",children:"example projects"})," in the repository."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.p,{children:"Ready to start using WP-Node? Check out the tutorial sections to learn how to set up your first WP-Node project and start interacting with WordPress data using modern TypeScript patterns."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);