"use strict";(self.webpackChunkwp_node=self.webpackChunkwp_node||[]).push([[407],{5640:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reference/post","title":"Post","description":"Post class is a transient component that wraps a WordPress wp_posts row and provides structured methods for working with post relationships, metadata, authors, and taxonomies.","source":"@site/docs/reference/post.md","sourceDirName":"reference","slug":"/reference/post","permalink":"/wp-node/docs/reference/post","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"User","permalink":"/wp-node/docs/reference/user"},"next":{"title":"Role","permalink":"/wp-node/docs/reference/role"}}');var t=n(4848),o=n(8453);const i={},d="Post",a={},c=[{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>withProps(props: Partial&lt;Props&gt;): this</code>",id:"withpropsprops-partialprops-this",level:5},{value:"<code>async children(): Promise&lt;Props[]&gt;</code>",id:"async-children-promiseprops",level:5},{value:"<code>async parents(): Promise&lt;Props[]&gt;</code>",id:"async-parents-promiseprops",level:5},{value:"<code>async terms(taxonomy: TaxonomyName): Promise&lt;WpTerms[]&gt;</code>",id:"async-termstaxonomy-taxonomyname-promisewpterms",level:5},{value:"<code>async author(): Promise&lt;WpUsers | undefined&gt;</code>",id:"async-author-promisewpusers--undefined",level:5},{value:"<code>private async init(): Promise&lt;void&gt;</code>",id:"private-async-init-promisevoid",level:5},{value:"Usage",id:"usage",level:2}];function l(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"post",children:"Post"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://github.com/rnaga/wp-node/blob/main/packages/core/src/core/post.ts",children:(0,t.jsx)(s.code,{children:"Post"})})," class is a transient component that wraps a WordPress ",(0,t.jsx)(s.code,{children:"wp_posts"})," row and provides structured methods for working with post relationships, metadata, authors, and taxonomies."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Data Wrapper"})," \u2013 Encapsulates ",(0,t.jsx)(s.code,{children:"wp_posts"})," row data and allows lazy loading of related entities."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Scoped Context"})," \u2013 Uses ",(0,t.jsx)(s.code,{children:"Meta"})," to mark the current post context."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Transient Lifecycle"})," \u2013 A new instance is created per request (via ",(0,t.jsx)(s.code,{children:"@component"})," with ",(0,t.jsx)(s.code,{children:"Transient"})," scope)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Async Init"})," \u2013 Automatically populates post data via the ",(0,t.jsx)(s.code,{children:"@asyncInit"})," decorator if a valid ",(0,t.jsx)(s.code,{children:"postId"})," is provided."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Flexible Access"})," \u2013 Offers ",(0,t.jsx)(s.code,{children:"filter"})," modes and ",(0,t.jsx)(s.code,{children:"withProps()"})," for runtime data shaping."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:'filter: "raw" | "edit" | "db" | "display" | "sample"'})}),(0,t.jsx)(s.br,{}),"\n","Optional filter mode (default: ",(0,t.jsx)(s.code,{children:'"raw"'}),"). Can be used to shape the format or intent of post data access."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"props: Props | undefined"})}),(0,t.jsx)(s.br,{}),"\n","Getter for the post's raw properties. May be undefined until async initialization is complete."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h5,{id:"withpropsprops-partialprops-this",children:(0,t.jsx)(s.code,{children:"withProps(props: Partial<Props>): this"})}),"\n",(0,t.jsxs)(s.p,{children:["Merge additional fields into the current ",(0,t.jsx)(s.code,{children:"_props"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h5,{id:"async-children-promiseprops",children:(0,t.jsx)(s.code,{children:"async children(): Promise<Props[]>"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns the post's children using a ",(0,t.jsx)(s.code,{children:"withChildren()"})," query.",(0,t.jsx)(s.br,{}),"\n","Caches the result on first call."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h5,{id:"async-parents-promiseprops",children:(0,t.jsx)(s.code,{children:"async parents(): Promise<Props[]>"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns the post\u2019s parent lineage (ancestors) using a ",(0,t.jsx)(s.code,{children:"withParents()"})," query.",(0,t.jsx)(s.br,{}),"\n","Caches the result once loaded."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h5,{id:"async-termstaxonomy-taxonomyname-promisewpterms",children:(0,t.jsx)(s.code,{children:"async terms(taxonomy: TaxonomyName): Promise<WpTerms[]>"})}),"\n",(0,t.jsx)(s.p,{children:"Retrieves terms for the given taxonomy."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Caches results in ",(0,t.jsx)(s.code,{children:"_terms"})," map."]}),"\n",(0,t.jsx)(s.li,{children:"Logs a message if terms aren't found."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h5,{id:"async-author-promisewpusers--undefined",children:(0,t.jsx)(s.code,{children:"async author(): Promise<WpUsers | undefined>"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns the post\u2019s author as a user object.",(0,t.jsx)(s.br,{}),"\n","Uses ",(0,t.jsx)(s.code,{children:"post_author"})," field and queries via ",(0,t.jsx)(s.code,{children:"QueryUtil"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h5,{id:"private-async-init-promisevoid",children:(0,t.jsx)(s.code,{children:"private async init(): Promise<void>"})}),"\n",(0,t.jsxs)(s.p,{children:["Called automatically if ",(0,t.jsx)(s.code,{children:"postId > 0"})," via ",(0,t.jsx)(s.code,{children:"@asyncInit"}),".",(0,t.jsx)(s.br,{}),"\n","Loads post data from the database and sets it to ",(0,t.jsx)(s.code,{children:"_props"}),".",(0,t.jsx)(s.br,{}),"\n","Logs if the post isn't found."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'const context = await Application.getContext();\nconst post = await context.container.get(Post);\n\nconst author = await post.author();\nconst children = await post.children();\nconst tags = await post.terms("post_tag");\n'})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(6540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);