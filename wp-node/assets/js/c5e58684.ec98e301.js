"use strict";(self.webpackChunkwp_node=self.webpackChunkwp_node||[]).push([[239],{8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>l});var n=s(6540);const r={},i=n.createContext(r);function c(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:t},e.children)}},8498:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"reference/meta-util","title":"MetaUtil","description":"MetaUtil class provides helper methods for accessing and evaluating metadata across all WordPress meta tables.","source":"@site/docs/reference/meta-util.md","sourceDirName":"reference","slug":"/reference/meta-util","permalink":"/wp-node/docs/reference/meta-util","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Meta","permalink":"/wp-node/docs/reference/meta"}}');var r=s(4848),i=s(8453);const c={},l="MetaUtil",a={},o=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"get",id:"get",level:4},{value:"getValue",id:"getvalue",level:4},{value:"isProtected",id:"isprotected",level:4},{value:"getObjectSubtype",id:"getobjectsubtype",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"metautil",children:"MetaUtil"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://github.com/rnaga/wp-node/blob/main/packages/core/src/core/utils/meta.util.ts",children:"MetaUtil"})," class provides helper methods for accessing and evaluating metadata across all WordPress meta tables."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Wraps access to the ",(0,r.jsx)(t.code,{children:"Meta"})," class for post, user, term, comment, site, and blog metadata."]}),"\n",(0,r.jsxs)(t.li,{children:["Supports protected key detection via ",(0,r.jsx)(t.code,{children:"isProtected()"}),"."]}),"\n",(0,r.jsx)(t.li,{children:"Resolves object subtypes (e.g., post type, taxonomy) using utility classes."}),"\n",(0,r.jsxs)(t.li,{children:["Follows WordPress conventions from ",(0,r.jsx)(t.code,{children:"meta.php"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'const context = await Application.getContext();\nconst metaUtil = context.components.get(MetaUtil);\nconst meta = await metaUtil.getValue("post", revisionId, "meta_key");\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h4,{id:"get",children:"get"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"get(table: types.MetaTable, id: number): Meta\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Returns a ",(0,r.jsx)(t.code,{children:"Meta"})," instance for the given table and object ID."]}),"\n",(0,r.jsx)(t.h4,{id:"getvalue",children:"getValue"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"getValue<T = string>(\n  table: types.MetaTable,\n  id: number,\n  key: string\n): Promise<T | undefined>\n"})}),"\n",(0,r.jsx)(t.p,{children:"Fetches a single metadata value for the given key and object."}),"\n",(0,r.jsx)(t.h4,{id:"isprotected",children:"isProtected"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"isProtected(metaKey: string, metaType?: types.MetaTable): boolean\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Returns ",(0,r.jsx)(t.code,{children:"true"})," if the key is considered protected (begins with ",(0,r.jsx)(t.code,{children:"_"}),")."]}),"\n",(0,r.jsx)(t.h4,{id:"getobjectsubtype",children:"getObjectSubtype"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'getObjectSubtype(\n  type: "post" | "comment" | "term" | "user",\n  id: number\n): Promise<string>\n'})}),"\n",(0,r.jsx)(t.p,{children:"Resolves the object subtype based on the type and ID:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"post"}),": returns post type."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"term"}),": returns taxonomy."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"comment"}),": returns ",(0,r.jsx)(t.code,{children:'"comment"'})," if comment exists."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"user"}),": returns ",(0,r.jsx)(t.code,{children:'"user"'})," if user exists."]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);